/* setting the background image as a faded colour. setting the font and giving the entire website a margin to give it a cleaner look */

body {
  background-image: linear-gradient(
    to left bottom,
    #709bbe,
    #58a8bf,
    #50b3b4,
    #66bb9f,
    #8cbf87
  );
  background-repeat: no-repeat;
  color: white;
  margin: 0 15%;
  font-family: Arial, Helvetica, sans-serif;
}

/* organising the nav bar with links to future projects */

nav {
  background-color: transparent;
}

.navbar {
  display: flex;
  flex: 1;
  justify-content: space-around;
  align-items: center;
  padding: 30px 20px;
  list-style-type: none;
  font-size: 1.2rem;
}

.navbarlist {
  padding: 16px;
}

.navbarlist:hover {
  cursor: pointer;
  background-color: white;
  color: black;
  border-radius: 8px;
}

a:link {
  color: white;
  text-decoration: none;
  padding: 16px;
}

a:visited {
  color: white;
  text-decoration: none;
  padding: 16px;
}

a:hover {
  cursor: pointer;
  background-color: white;
  color: black;
  border-radius: 8px;
}

h1 {
  display: flex;
  justify-content: center;
  padding: 30px 0;
  font-family: Arial, Helvetica, sans-serif;
}

h2 {
  display: flex;
  justify-content: center;
  padding: 0 0 30px 0;
  color: white;
}

/* gets rid of dfault margin padding and dot */

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* this is effectively were the container will do its flip. I have chosen min height 
 to be 200px as it creates a nice even rectangle or the content to fit inside of the 
 prespective gives the flip itslf a flip type of animation rather than a sliding motion */

.flip-card {
  background-color: transparent;
  width: 25%;
  min-height: 200px;
  perspective: 2000px;
}

/* The inner flip card is there to position the front and the back of the container */

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: left;
  transition: transform 0.9s;
  transform-style: preserve-3d;
  animation: foward 2s;
}

/* As the cursor hovers over the card/container the card transforms along its y axis or verticaly. 
this can easily be change to horizontally be rotating along the x axis */

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg) scale(1.3);
  position: absolute;
}

/* this ensures that when the card is being hovered over it is the top layer */

.flip-card:hover {
  z-index: 1;
}

/* this is here to ensure that when the card is flipped it stay in position. the absolute 
value means that once flipped the card stays in the same position the backface hidden section 
means that only one side of the flip card will be visible at any certain time */

.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  min-height: 100%;
  backface-visibility: hidden;
}

/* styling only the front side of the card */
.flip-card-front {
  font-size: 1.2rem;
  background-color: transparent;
  color: white;
  padding: 20px;
}

/* Styling only the back side of the card keeping the back of the card facing backwards with the 180 degrees */
.flip-card-back {
  background-color: white;
  color: black;
  transform: rotateY(180deg);
  border-radius: 10px;
  padding: 20px;
  font-size: 0.9rem;
}

/* This grid container puts all the flip cards into a grid format with 3 columns and to style the grid itself */
.grid-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 0 50px;
  background-color: transparent;
  padding: 10px;
  margin: 50px;
}

.grid-container > * {
  width: 100%;
  height: 100%;
}

.footer {
  display: flex;
  flex: 1;
  justify-content: space-around;
  align-items: center;
  margin: 30px 20px;
  list-style-type: none;
  font-size: 1.2rem;
}
